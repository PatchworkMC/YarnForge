--- a/net/minecraft/enchantment/Enchantment.java
+++ b/net/minecraft/enchantment/Enchantment.java
@@ -20,7 +20,8 @@
 import net.minecraftforge.api.distmarker.Dist;
 import net.minecraftforge.api.distmarker.OnlyIn;
 
-public abstract class Enchantment {
+public abstract class Enchantment extends net.minecraftforge.registries.ForgeRegistryEntry<Enchantment> {
+   private final net.minecraftforge.common.util.ReverseTagWrapper<Enchantment> reverseTags = new net.minecraftforge.common.util.ReverseTagWrapper<>(this, () -> net.minecraft.tag.ServerTagManagerHolder.getTagManager().getCustomTypeCollection(net.minecraftforge.registries.ForgeRegistries.ENCHANTMENTS));
    private final EquipmentSlot[] slotTypes;
    private final Enchantment.Rarity rarity;
    public final EnchantmentTarget type;
@@ -39,6 +40,14 @@
       this.slotTypes = slots;
    }
 
+   public java.util.Set<net.minecraft.util.Identifier> getTags() {
+      return reverseTags.getTagNames();
+   }
+
+   public boolean isIn(net.minecraft.tag.Tag<Enchantment> tag) {
+      return tag.contains(this);
+   }
+
    public Map<EquipmentSlot, ItemStack> getEquipment(LivingEntity livingEntityIn) {
       Map<EquipmentSlot, ItemStack> map = Maps.newEnumMap(EquipmentSlot.class);
 
@@ -116,7 +125,7 @@
    }
 
    public boolean isAcceptableItem(ItemStack stack) {
-      return this.type.isAcceptableItem(stack.getItem());
+      return canApplyAtEnchantingTable(stack);
    }
 
    public void onTargetDamaged(LivingEntity user, Entity target, int level) {
@@ -141,6 +150,24 @@
       return true;
    }
 
+   /**
+    * This applies specifically to applying at the enchanting table. The other method {@link #canApply(ItemStack)}
+    * applies for <i>all possible</i> enchantments.
+    * @param stack
+    * @return
+    */
+   public boolean canApplyAtEnchantingTable(ItemStack stack) {
+      return stack.canApplyAtEnchantingTable(this);
+   }
+
+   /**
+    * Is this enchantment allowed to be enchanted on books via Enchantment Table
+    * @return false to disable the vanilla feature
+    */
+   public boolean isAllowedOnBooks() {
+      return true;
+   }
+
    public static enum Rarity {
       COMMON(10),
       UNCOMMON(5),
