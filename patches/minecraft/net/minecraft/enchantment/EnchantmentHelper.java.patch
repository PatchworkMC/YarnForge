--- a/net/minecraft/enchantment/EnchantmentHelper.java
+++ b/net/minecraft/enchantment/EnchantmentHelper.java
@@ -274,7 +274,7 @@
 
    public static int calculateRequiredExperienceLevel(Random rand, int enchantNum, int power, ItemStack stack) {
       Item item = stack.getItem();
-      int i = item.getEnchantability();
+      int i = stack.getItemEnchantability();
       if (i <= 0) {
          return 0;
       } else {
@@ -312,7 +312,7 @@
    public static List<EnchantmentLevelEntry> generateEnchantments(Random randomIn, ItemStack itemStackIn, int level, boolean allowTreasure) {
       List<EnchantmentLevelEntry> list = Lists.newArrayList();
       Item item = itemStackIn.getItem();
-      int i = item.getEnchantability();
+      int i = itemStackIn.getItemEnchantability();
       if (i <= 0) {
          return list;
       } else {
@@ -365,7 +365,7 @@
       boolean flag = stack.getItem() == Items.BOOK;
 
       for(Enchantment enchantment : Registry.ENCHANTMENT) {
-         if ((!enchantment.isTreasure() || allowTreasure) && enchantment.isAvailableForRandomSelection() && (enchantment.type.isAcceptableItem(item) || flag)) {
+         if ((!enchantment.isTreasure() || allowTreasure) && enchantment.isAvailableForRandomSelection() && (enchantment.canApplyAtEnchantingTable(stack) || (flag && enchantment.isAllowedOnBooks()))) {
             for(int i = enchantment.getMaxLevel(); i > enchantment.getMinLevel() - 1; --i) {
                if (level >= enchantment.getMinPower(i) && level <= enchantment.getMaxPower(i)) {
                   list.add(new EnchantmentLevelEntry(enchantment, i));
