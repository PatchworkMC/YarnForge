--- a/net/minecraft/block/CactusBlock.java
+++ b/net/minecraft/block/CactusBlock.java
@@ -17,7 +17,7 @@
 import net.minecraft.world.WorldAccess;
 import net.minecraft.world.WorldView;
 
-public class CactusBlock extends Block {
+public class CactusBlock extends Block implements net.minecraftforge.common.IPlantable {
    public static final IntProperty AGE = Properties.AGE_15;
    protected static final VoxelShape COLLISION_SHAPE = Block.createCuboidShape(1.0D, 0.0D, 1.0D, 15.0D, 15.0D, 15.0D);
    protected static final VoxelShape OUTLINE_SHAPE = Block.createCuboidShape(1.0D, 0.0D, 1.0D, 15.0D, 16.0D, 15.0D);
@@ -28,6 +28,7 @@
    }
 
    public void scheduledTick(BlockState state, ServerWorld worldIn, BlockPos pos, Random rand) {
+      if (!worldIn.isAreaLoaded(pos, 1)) return; // Forge: prevent growing cactus from loading unloaded chunks with block update
       if (!state.canPlaceAt(worldIn, pos)) {
          worldIn.breakBlock(pos, true);
       }
@@ -43,6 +44,7 @@
 
          if (i < 3) {
             int j = state.get(AGE);
+            if(net.minecraftforge.common.ForgeHooks.onCropsGrowPre(worldIn, blockpos, state, true)) {
             if (j == 15) {
                worldIn.setBlockState(blockpos, this.getDefaultState());
                BlockState blockstate = state.with(AGE, Integer.valueOf(0));
@@ -51,7 +53,8 @@
             } else {
                worldIn.setBlockState(pos, state.with(AGE, Integer.valueOf(j + 1)), 4);
             }
-
+            net.minecraftforge.common.ForgeHooks.onCropsGrowPost(worldIn, pos, state);
+            }
          }
       }
    }
@@ -82,7 +85,7 @@
       }
 
       BlockState blockstate1 = worldIn.getBlockState(pos.down());
-      return (blockstate1.isOf(Blocks.CACTUS) || blockstate1.isOf(Blocks.SAND) || blockstate1.isOf(Blocks.RED_SAND)) && !worldIn.getBlockState(pos.up()).getMaterial().isLiquid();
+      return blockstate1.canSustainPlant(worldIn, pos, Direction.UP, this) && !worldIn.getBlockState(pos.up()).getMaterial().isLiquid();
    }
 
    public void onEntityCollision(BlockState state, World worldIn, BlockPos pos, Entity entityIn) {
@@ -96,4 +99,14 @@
    public boolean canPathfindThrough(BlockState state, BlockView worldIn, BlockPos pos, NavigationType type) {
       return false;
    }
+
+   @Override
+   public net.minecraftforge.common.PlantType getPlantType(BlockView world, BlockPos pos) {
+      return net.minecraftforge.common.PlantType.DESERT;
+   }
+
+   @Override
+   public BlockState getPlant(BlockView world, BlockPos pos) {
+      return getDefaultState();
+   }
 }
