--- a/net/minecraft/item/HoeItem.java
+++ b/net/minecraft/item/HoeItem.java
@@ -21,14 +21,16 @@
    protected static final Map<Block, BlockState> TILLED_BLOCKS = Maps.newHashMap(ImmutableMap.of(Blocks.GRASS_BLOCK, Blocks.FARMLAND.getDefaultState(), Blocks.GRASS_PATH, Blocks.FARMLAND.getDefaultState(), Blocks.DIRT, Blocks.FARMLAND.getDefaultState(), Blocks.COARSE_DIRT, Blocks.DIRT.getDefaultState()));
 
    public HoeItem(ToolMaterial itemTier, int attackDamage, float attackSpeed, Item.Settings properties) {
-      super((float)attackDamage, attackSpeed, itemTier, EFFECTIVE_BLOCKS, properties);
+      super((float)attackDamage, attackSpeed, itemTier, EFFECTIVE_BLOCKS, properties.addToolType(net.minecraftforge.common.ToolType.HOE, itemTier.getMiningLevel()));
    }
 
    public ActionResult useOnBlock(ItemUsageContext context) {
       World world = context.getWorld();
       BlockPos blockpos = context.getBlockPos();
-      if (context.getSide() != Direction.DOWN && world.getBlockState(blockpos.up()).isAir()) {
-         BlockState blockstate = TILLED_BLOCKS.get(world.getBlockState(blockpos).getBlock());
+      int hook = net.minecraftforge.event.ForgeEventFactory.onHoeUse(context);
+      if (hook != 0) return hook > 0 ? ActionResult.SUCCESS : ActionResult.FAIL;
+      if (context.getSide() != Direction.DOWN && world.isAir(blockpos.up())) {
+         BlockState blockstate = world.getBlockState(blockpos).getToolModifiedState(world, blockpos, context.getPlayer(), context.getStack(), net.minecraftforge.common.ToolType.HOE);
          if (blockstate != null) {
             PlayerEntity playerentity = context.getPlayer();
             world.playSound(playerentity, blockpos, SoundEvents.ITEM_HOE_TILL, SoundCategory.BLOCKS, 1.0F, 1.0F);
@@ -47,4 +49,9 @@
 
       return ActionResult.PASS;
    }
+
+   @javax.annotation.Nullable
+   public static BlockState getHoeTillingState(BlockState originalState) {
+      return TILLED_BLOCKS.get(originalState.getBlock());
+   }
 }
