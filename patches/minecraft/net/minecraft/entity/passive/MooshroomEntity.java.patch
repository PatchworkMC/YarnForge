--- a/net/minecraft/entity/passive/MooshroomEntity.java
+++ b/net/minecraft/entity/passive/MooshroomEntity.java
@@ -42,7 +42,7 @@
 import net.minecraftforge.api.distmarker.OnlyIn;
 import org.apache.commons.lang3.tuple.Pair;
 
-public class MooshroomEntity extends CowEntity implements Shearable {
+public class MooshroomEntity extends CowEntity implements Shearable, net.minecraftforge.common.IForgeShearable {
    private static final TrackedData<String> TYPE = DataTracker.registerData(MooshroomEntity.class, TrackedDataHandlerRegistry.STRING);
    private StatusEffect stewEffect;
    private int stewEffectDuration;
@@ -101,7 +101,7 @@
 
          this.playSound(soundevent, 1.0F, 1.0F);
          return ActionResult.success(this.world.isClient);
-      } else if (itemstack.getItem() == Items.SHEARS && this.isShearable()) {
+      } else if (false && itemstack.getItem() == Items.SHEARS && this.isShearable()) { //Forge: Moved to onSheared
          this.sheared(SoundCategory.PLAYERS);
          if (!this.world.isClient) {
             itemstack.damage(1, p_230254_1_, (p_213442_1_) -> {
@@ -236,6 +236,45 @@
       return mooshroomentity$type2;
    }
 
+   @Override
+   public boolean isShearable(@javax.annotation.Nonnull ItemStack item, World world, BlockPos pos) {
+      return isShearable();
+   }
+
+   @javax.annotation.Nonnull
+   @Override
+   public java.util.List<ItemStack> onSheared(@javax.annotation.Nullable PlayerEntity player, @javax.annotation.Nonnull ItemStack item, World world, BlockPos pos, int fortune) {
+      world.playSoundFromEntity(null, this, SoundEvents.ENTITY_MOOSHROOM_SHEAR, player == null ? SoundCategory.BLOCKS : SoundCategory.PLAYERS, 1.0F, 1.0F);
+      if (!world.isClient()) {
+         ((ServerWorld)this.world).spawnParticles(ParticleTypes.EXPLOSION, this.getX(), this.getBodyY(0.5D), this.getZ(), 1, 0.0D, 0.0D, 0.0D, 0.0D);
+         this.remove();
+         CowEntity cowentity = EntityType.COW.create(this.world);
+         cowentity.refreshPositionAndAngles(this.getX(), this.getY(), this.getZ(), this.yaw, this.pitch);
+         cowentity.setHealth(this.getHealth());
+         cowentity.bodyYaw = this.bodyYaw;
+         if (this.hasCustomName()) {
+            cowentity.setCustomName(this.getCustomName());
+            cowentity.setCustomNameVisible(this.isCustomNameVisible());
+         }
+
+         if (this.isPersistent()) {
+            cowentity.setPersistent();
+         }
+
+         cowentity.setInvulnerable(this.isInvulnerable());
+         this.world.spawnEntity(cowentity);
+
+         java.util.List<ItemStack> items = new java.util.ArrayList<>();
+         for (int i = 0; i < 5; ++i) {
+            items.add(new ItemStack(this.getMooshroomType().mushroom.getBlock()));
+         }
+
+         return items;
+      }
+      return java.util.Collections.emptyList();
+   }
+
+
    public static enum Type {
       RED("red", Blocks.RED_MUSHROOM.getDefaultState()),
       BROWN("brown", Blocks.BROWN_MUSHROOM.getDefaultState());
