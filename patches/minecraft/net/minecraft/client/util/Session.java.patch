--- a/net/minecraft/client/util/Session.java
+++ b/net/minecraft/client/util/Session.java
@@ -20,8 +20,22 @@
    private final String uuid;
    private final String accessToken;
    private final Session.AccountType accountType;
+   /** Forge: Cache of the local session's GameProfile properties. */
+   private com.mojang.authlib.properties.PropertyMap properties;
 
    public Session(String usernameIn, String playerIDIn, String tokenIn, String sessionTypeIn) {
+      if (usernameIn == null || usernameIn.isEmpty()) {
+         usernameIn = "MissingName";
+         playerIDIn = tokenIn = "NotValid";
+         org.apache.logging.log4j.Logger logger = org.apache.logging.log4j.LogManager.getLogger(getClass().getName());
+         logger.log(org.apache.logging.log4j.Level.WARN, "=========================================================");
+         logger.log(org.apache.logging.log4j.Level.WARN, "WARNING!! the username was not set for this session, typically");
+         logger.log(org.apache.logging.log4j.Level.WARN, "this means you installed Forge incorrectly. We have set your");
+         logger.log(org.apache.logging.log4j.Level.WARN, "name to \"MissingName\" and your session to nothing. Please");
+         logger.log(org.apache.logging.log4j.Level.WARN, "check your installation and post a console log from the launcher");
+         logger.log(org.apache.logging.log4j.Level.WARN, "when asking for help!");
+         logger.log(org.apache.logging.log4j.Level.WARN, "=========================================================");
+      }
       this.username = usernameIn;
       this.uuid = playerIDIn;
       this.accessToken = tokenIn;
@@ -47,12 +61,24 @@
    public GameProfile getProfile() {
       try {
          UUID uuid = UUIDTypeAdapter.fromString(this.getUuid());
-         return new GameProfile(uuid, this.getUsername());
+         GameProfile ret = new GameProfile(uuid, this.getUsername());    //Forge: Adds cached GameProfile properties to returned GameProfile.
+         if (properties != null) ret.getProperties().putAll(properties); // Helps to cut down on calls to the session service,
+         return ret;                                                     // which helps to fix MC-52974.
       } catch (IllegalArgumentException illegalargumentexception) {
          return new GameProfile((UUID)null, this.getUsername());
       }
    }
 
+   //For internal use only. Modders should never need to use this.
+   public void setProperties(com.mojang.authlib.properties.PropertyMap properties) {
+       if (this.properties == null)
+           this.properties = properties;
+   }
+
+   public boolean hasCachedProperties() {
+       return properties != null;
+   }
+
    @Environment(EnvType.CLIENT)
    public static enum AccountType {
       LEGACY("legacy"),
