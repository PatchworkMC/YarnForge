--- a/net/minecraft/client/gui/screen/Screen.java
+++ b/net/minecraft/client/gui/screen/Screen.java
@@ -115,7 +115,10 @@
    }
 
    protected void renderTooltip(MatrixStack matrixStack, ItemStack itemStack, int mouseX, int mouseY) {
-      this.renderTooltip(matrixStack, this.getTooltipFromItem(itemStack), mouseX, mouseY);
+      TextRenderer font = itemStack.getItem().getFontRenderer(itemStack);
+      net.minecraftforge.fml.client.gui.GuiUtils.preItemToolTip(itemStack);
+      this.renderWrappedToolTip(matrixStack, this.getTooltipFromItem(itemStack), mouseX, mouseY, (font == null ? this.textRenderer : font));
+      net.minecraftforge.fml.client.gui.GuiUtils.postItemToolTip();
    }
 
    public List<Text> getTooltipFromItem(ItemStack itemStack) {
@@ -123,14 +126,20 @@
    }
 
    public void renderTooltip(MatrixStack matrixStack, Text text, int mouseX, int mouseY) {
-      this.renderOrderedTooltip(matrixStack, Arrays.asList(text.asOrderedText()), mouseX, mouseY);
+      this.renderTooltip(matrixStack, Arrays.asList(text), mouseX, mouseY);
    }
 
    public void renderTooltip(MatrixStack p_243308_1_, List<Text> p_243308_2_, int p_243308_3_, int p_243308_4_) {
-      this.renderOrderedTooltip(p_243308_1_, Lists.transform(p_243308_2_, Text::asOrderedText), p_243308_3_, p_243308_4_);
+      this.renderWrappedToolTip(p_243308_1_, p_243308_2_, p_243308_3_, p_243308_4_, textRenderer);
    }
+   public void renderWrappedToolTip(MatrixStack matrixStack, List<? extends net.minecraft.text.StringVisitable> tooltips, int mouseX, int mouseY, TextRenderer font) {
+      net.minecraftforge.fml.client.gui.GuiUtils.drawHoveringText(matrixStack, tooltips, mouseX, mouseY, width, height, -1, font);
+   }
 
    public void renderOrderedTooltip(MatrixStack matrixStack, List<? extends OrderedText> tooltips, int mouseX, int mouseY) {
+      this.renderToolTip(matrixStack, tooltips, mouseX, mouseY, textRenderer);
+   }
+   public void renderToolTip(MatrixStack matrixStack, List<? extends OrderedText> tooltips, int mouseX, int mouseY, TextRenderer font) {
       if (!tooltips.isEmpty()) {
          int i = 0;
 
@@ -291,9 +300,12 @@
    }
 
    public void sendMessage(String text, boolean addToChat) {
+      text = net.minecraftforge.event.ForgeEventFactory.onClientSendMessage(text);
+      if (text.isEmpty()) return;
       if (addToChat) {
          this.client.inGameHud.getChatHud().addToMessageHistory(text);
       }
+      //if (net.minecraftforge.client.ClientCommandHandler.instance.executeCommand(mc.player, msg) != 0) return; //Forge: TODO Client command re-write
 
       this.client.player.sendChatMessage(text);
    }
@@ -304,10 +316,17 @@
       this.textRenderer = minecraft.textRenderer;
       this.width = width;
       this.height = height;
+      java.util.function.Consumer<AbstractButtonWidget> remove = (b) -> {
+         buttons.remove(b);
+         children.remove(b);
+      };
+      if (!net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.client.event.GuiScreenEvent.InitGuiEvent.Pre(this, this.buttons, this::addButton, remove))) {
       this.buttons.clear();
       this.children.clear();
       this.setFocused((Element)null);
       this.init();
+      }
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.client.event.GuiScreenEvent.InitGuiEvent.Post(this, this.buttons, this::addButton, remove));
    }
 
    public List<? extends Element> children() {
@@ -330,6 +349,7 @@
    public void renderBackground(MatrixStack matrixStack, int vOffset) {
       if (this.client.world != null) {
          this.fillGradient(matrixStack, 0, 0, this.width, this.height, -1072689136, -804253680);
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.client.event.GuiScreenEvent.BackgroundDrawnEvent(this, matrixStack));
       } else {
          this.renderBackgroundTexture(vOffset);
       }
@@ -348,6 +368,7 @@
       bufferbuilder.vertex((double)this.width, 0.0D, 0.0D).texture((float)this.width / 32.0F, (float)vOffset).color(64, 64, 64, 255).next();
       bufferbuilder.vertex(0.0D, 0.0D, 0.0D).texture(0.0F, (float)vOffset).color(64, 64, 64, 255).next();
       tessellator.draw();
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.client.event.GuiScreenEvent.BackgroundDrawnEvent(this, new MatrixStack()));
    }
 
    public boolean isPauseScreen() {
@@ -434,4 +455,8 @@
 
    public void filesDragged(List<Path> packs) {
    }
+
+   public MinecraftClient getMinecraft() {
+      return this.client;
+   }
 }
