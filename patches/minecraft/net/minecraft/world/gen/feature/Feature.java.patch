--- a/net/minecraft/world/gen/feature/Feature.java
+++ b/net/minecraft/world/gen/feature/Feature.java
@@ -15,7 +15,7 @@
 import net.minecraft.world.gen.ProbabilityConfig;
 import net.minecraft.world.gen.chunk.ChunkGenerator;
 
-public abstract class Feature<FC extends FeatureConfig> {
+public abstract class Feature<FC extends FeatureConfig> extends net.minecraftforge.registries.ForgeRegistryEntry<Feature<?>> {
    public static final Feature<DefaultFeatureConfig> NO_OP = register("no_op", new NoOpFeature(DefaultFeatureConfig.CODEC));
    public static final Feature<TreeFeatureConfig> TREE = register("tree", new TreeFeature(TreeFeatureConfig.CODEC));
    public static final FlowerFeature<RandomPatchFeatureConfig> FLOWER = register("flower", new DefaultFlowerFeature(RandomPatchFeatureConfig.CODEC));
@@ -97,11 +97,11 @@
    public abstract boolean generate(StructureWorldAccess reader, ChunkGenerator generator, Random rand, BlockPos pos, FC config);
 
    protected static boolean isStone(Block blockIn) {
-      return blockIn == Blocks.STONE || blockIn == Blocks.GRANITE || blockIn == Blocks.DIORITE || blockIn == Blocks.ANDESITE;
+      return net.minecraftforge.common.Tags.Blocks.STONE.contains(blockIn);
    }
 
    public static boolean isSoil(Block blockIn) {
-      return blockIn == Blocks.DIRT || blockIn == Blocks.GRASS_BLOCK || blockIn == Blocks.PODZOL || blockIn == Blocks.COARSE_DIRT || blockIn == Blocks.MYCELIUM;
+      return net.minecraftforge.common.Tags.Blocks.DIRT.contains(blockIn);
    }
 
    public static boolean isSoil(TestableWorld world, BlockPos pos) {
