--- a/net/minecraft/world/biome/Biome.java
+++ b/net/minecraft/world/biome/Biome.java
@@ -57,7 +57,7 @@
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
-public final class Biome {
+public final class Biome extends net.minecraftforge.registries.ForgeRegistryEntry.UncheckedRegistryEntry<Biome> {
    public static final Logger LOGGER = LogManager.getLogger();
    public static final Codec<Biome> CODEC = RecordCodecBuilder.create((p_235064_0_) -> {
       return p_235064_0_.group(Biome.Weather.CODEC.forGetter((p_242446_0_) -> {
@@ -74,7 +74,9 @@
          return p_242443_0_.generationSettings;
       }), SpawnSettings.CODEC.forGetter((p_242442_0_) -> {
          return p_242442_0_.spawnSettings;
-      })).apply(p_235064_0_, Biome::new);
+      }), Identifier.CODEC.optionalFieldOf("forge:registry_name").forGetter(b -> Optional.ofNullable(b.getRegistryName())))
+      .apply(p_235064_0_, (climate, category, depth, scale, effects, gen, spawns, name) ->
+          net.minecraftforge.common.ForgeHooks.enhanceBiome(name.orElse(null), climate, category, depth, scale, effects, gen, spawns, p_235064_0_, Biome::new));
    });
    public static final Codec<Biome> field_26633 = RecordCodecBuilder.create((p_242432_0_) -> {
       return p_242432_0_.group(Biome.Weather.CODEC.forGetter((p_242441_0_) -> {
@@ -204,7 +206,7 @@
       } else {
          if (pos.getY() >= 0 && pos.getY() < 256 && worldIn.getLightLevel(LightType.BLOCK, pos) < 10) {
             BlockState blockstate = worldIn.getBlockState(pos);
-            if (blockstate.isAir() && Blocks.SNOW.getDefaultState().canPlaceAt(worldIn, pos)) {
+            if (blockstate.isAir(worldIn, pos) && Blocks.SNOW.getDefaultState().canPlaceAt(worldIn, pos)) {
                return true;
             }
          }
